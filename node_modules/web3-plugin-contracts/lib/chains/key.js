"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAPIKey = void 0;
const chain_id_1 = require("./chain-id");
const getAPIKey = (network) => {
    switch (network) {
        case chain_id_1.ChainID.ETHEREUM_MAINNET:
        case chain_id_1.ChainID.ETHEREUM_GOERLI:
        case chain_id_1.ChainID.ETHEREUM_SEPOLIA:
        case chain_id_1.ChainID.ETHEREUM_HOLESKY:
            return process.env.ETHERSCAN_API_KEY || "";
        case chain_id_1.ChainID.ARBITRUM_ONE:
        case chain_id_1.ChainID.ARBITRUM_GOERLI:
        case chain_id_1.ChainID.ARBITRUM_SEPOLIA:
            return process.env.ARBISCAN_API_KEY || "";
        case chain_id_1.ChainID.ARBITRUM_NOVA:
            return process.env.NOVAARBISCAN_API_KEY || "";
        case chain_id_1.ChainID.POLYGON_MAINNET:
        case chain_id_1.ChainID.POLYGON_MUMBAI:
        case chain_id_1.ChainID.POLYGON_AMOY:
            return process.env.POLYGONSCAN_API_KEY || "";
        case chain_id_1.ChainID.OPTIMISM_MAINNET:
        case chain_id_1.ChainID.OPTIMISM_SEPOLIA:
            return process.env.OPTIMISTICSCAN_API_KEY || "";
        case chain_id_1.ChainID.FANTOM_MAINNET:
        case chain_id_1.ChainID.FANTOM_TESTNET:
            return process.env.FTMSCAN_API_KEY || "";
        case chain_id_1.ChainID.BASE_MAINNET:
        case chain_id_1.ChainID.BASE_SEPOLIA:
            return process.env.BASESCAN_API_KEY || "";
        case chain_id_1.ChainID.BNB_MAINNET:
        case chain_id_1.ChainID.BNB_TESTNET:
            return process.env.BSCSCAN_API_KEY || "";
        case chain_id_1.ChainID.LINEA_MAINNET:
        case chain_id_1.ChainID.LINEA_TESTNET:
            return process.env.LINEASCAN_API_KEY || "";
        case chain_id_1.ChainID.MOONBEAM_MAINNET:
        case chain_id_1.ChainID.MOONBASE_ALPHA:
            return process.env.MOONBEAM_API_KEY || "";
        case chain_id_1.ChainID.MOONRIVER_MAINNET:
            return process.env.MOONRIVER_API_KEY || "";
        case chain_id_1.ChainID.CELO_MAINNET:
        case chain_id_1.ChainID.CELO_ALFAJORES:
            return process.env.CELOSCAN_API_KEY || "";
        case chain_id_1.ChainID.GNOSIS_MAINNET:
        case chain_id_1.ChainID.GNOSIS_CHIADO:
            return process.env.GNOSISSCAN_API_KEY || "";
        case chain_id_1.ChainID.CRONOS_MAINNET:
            return process.env.CRONOSCAN_API_KEY || "";
        case chain_id_1.ChainID.SCROLL_MAINNET:
        case chain_id_1.ChainID.SCROLL_SEPOLIA:
            return process.env.SCROLLSCAN_API_KEY || "";
        case chain_id_1.ChainID.BITTORRENT_MAINNET:
        case chain_id_1.ChainID.BITTORRENT_TESTNET:
            return process.env.BTTCSCAN_API_KEY || "";
        case chain_id_1.ChainID.WEMIX_MAINNET:
        case chain_id_1.ChainID.WEMIX_TESTNET:
            return process.env.WEMIXSCAN_API_KEY || "";
        case chain_id_1.ChainID.BLAST_MAINNET:
        case chain_id_1.ChainID.BLAST_SEPOLIA:
            return process.env.BLASTSCAN_API_KEY || "";
        case chain_id_1.ChainID.FRAXSCAN_MAINNET:
        case chain_id_1.ChainID.FRAXSCAN_TESTNET:
            return process.env.FRAXSCAN_API_KEY || "";
        case chain_id_1.ChainID.ZKEVM_POLYGON:
        case chain_id_1.ChainID.ZKEVM_POLYGON_CARDONA:
            return process.env.ZKEVM_POLYSCAN_API_KEY || "";
        case chain_id_1.ChainID.KROMA_MAINNET:
        case chain_id_1.ChainID.KROMA_SEPOLIA:
            return process.env.KROMA_API_KEY || "";
        default:
            return "";
    }
};
exports.getAPIKey = getAPIKey;
//# sourceMappingURL=key.js.map