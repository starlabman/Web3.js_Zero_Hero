import { Contract, Web3PluginBase } from "web3";
export declare class ContractPlugin extends Web3PluginBase {
    pluginNamespace: string;
    private explorerAPIKey;
    constructor(apiKey?: string);
    source(contractAddress: string): Promise<import("./scanners/explorer-service").EthGetSourceCodeInterface>;
    contract(contractAddress: string): Promise<Contract<readonly any[]>>;
    set updateKey(key: string);
    ping(): string;
    private chainId;
}
export declare const getSource: (contractAddress: string, options: ContractPluginOptions) => Promise<import("./scanners/explorer-service").EthGetSourceCodeInterface>;
export declare const getContract: (contractAddress: string, options: ContractPluginOptions) => Promise<Contract<readonly any[]>>;
interface ContractPluginOptions {
    chainId: string;
    apiKey?: string;
}
declare module "web3" {
    interface Web3Context {
        contractPlugin: ContractPlugin;
    }
}
export {};
//# sourceMappingURL=index.d.ts.map